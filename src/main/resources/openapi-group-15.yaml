openapi: 3.0.0
info:
  title: 'MTTS'
  description: 'Through an easily accessible network of travel tubes we want to  allow goods
                    and people to travel more efficiently than ever.'
  version: 0.1.0 # semantic versioning, in develop starts at 0.1.0, when in production move to 1.0.0
servers:
  - url: http://localhost:8080/
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-15
    description: 'Public web api'

components:
  securitySchemes:
    Token:
      type: http
      scheme: bearer

paths:
  /api/message:
    get:
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      tags:
        - test

  /api/login: #login or logout
    summary: login/logout
    description: login/logout
    post:
      summary: login, returns the authentication token
      tags:
        - authentication
      operationId: login
      requestBody:
        description: provide login information.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Succesfully logged in.
          content:
            text/plain:
              schema:
                type: string
                example: "sdjfsldffjfsdfkjsdfgdfksfdfjslfkdf"
        '402':
          description: Username or Password does not match.
        '500':
          description: Internal error.
    delete:
      summary: logout
      operationId: logout
      tags:
        - authentication
      responses:
        '200':
          description: succesfully logged out of the system
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden.
        '5XX':
          description: Unexpected error.
      security:
        - Token: []

  /api/createAccount:
    summary: create an account
    description: creates a new account
    post:
      operationId: createAccount
      summary: create an account
      tags:
        - user
      requestBody:
        description: provide correct information to create a user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                homeAddress:
                  type: string
                homeEndpointID:
                  type: integer
                businessAccount:
                  type: boolean
                password:
                  type: string
      responses:
        '200':
          description: user created
        '402':
          description: username already is taken
        '500':
          description: Internal error.
  /api/accountInformation: #get your account information
    summary: get your account information
    description: get your account information
    get:
      summary: get user information.
      tags:
        - user
      responses:
        '200':
          description: list of an endpoint given their id
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: integer
                  name:
                    type: string
                  homeAdress:
                    type: string
                  homeEndpointID:
                    type: integer
                  subscription:
                    type: string
                  subscriptionID:
                    type: integer
                example: {
                  userID: 1,
                  name: "Debby",
                  homeAdress: "Colony 1, residence 15",
                  homeEndpoint: 5,
                  subscription: "Unlimited",
                  subscriptionID: "5"
                }
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Internal error.
      security:
        - Token: []
  /api/user/{id}/shareLocation:
    description: Share your location with your friends.
    post:
      summary: Share your location with your friends.
      tags:
        - user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succesfuly shared your location with your friends.
        '401':
          description: Authorization information is missing or invalid.
        '403':
            description: Forbidden!
        '5XX':
          description: Unexpected error.
      security:
        - Token: [User]

  /api/friend: #Get all our friends
    get:
      operationId: viewFriends
      summary: Get all your friends.
      tags:
        - friend
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: integer
                  name:
                    type: string
                example: [ {
                  userID: 1,
                  name: 'Debby'
                },{
                  userID: 5,
                  name: 'Frank'
                } ]
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Internal error.
      security:
        - Token: [User]
  /api/friend/{fName}: #Add a friend or delete one
    parameters:
      - in: path
        name: fName
        schema:
          type: string
        required: true
    post:
      operationId: addFriend
      summary: Add a new friend.
      tags:
        - friend

      responses:
        '200':
          description: Succesfuly added a friend.
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Internal error.
      security:
        - Token: [User]
    delete:
        summary: Delete a friend.
        operationId: removeFriend
        tags:
          - friend
        responses:
          '200':
            description: Succesfuly deleted a friend.
          '401':
            description: Authorization information is missing or invalid.
          '403':
            description: Forbidden!
          '500':
            description: Internal error.
        security:
          - Token: [User]
  /api/friend/{id}/location: # Get the location of a current friend
      description: Get the current location of one of your friends.
      get:
        summary: Get the current location of one of your friends.
        tags:
          - friend
        parameters:
          - in: path
            name: id
            required: true
            schema:
              type: integer
        responses:
          '200':
            description: Succesfuly retrieved the location of your friend.
          '401':
            description: Authorization information is missing or invalid.
          '403':
            description: Forbidden!
          '500':
            description: Unexpected error.
          default:
            description: This friend does not share his location with others.
        security:
          - Token: [User]

  /api/subscription:
    description: subscription.
    get:
      operationId: viewSubscriptions
      tags:
        - store
      summary: View all available subscriptions.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptionID:
                    type: integer
                  subscriptionName:
                    type: string
                  subscriptionPrice:
                    type: integer
                example: [ {
                  subscriptionID: 1,
                  subscriptionName: 'Start-up'
                },{
                  subscriptionID: 2,
                  subscriptionName: 'Professional'
                } ]
        '500':
          description: Internal error.
    post:
      summary: Buy subscription
      tags:
        - store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subscriptionName:
                  type: string
      responses:
        '200':
          description: Succesfuly bought a subscription
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Internal error.
      security:
        - Token: []
    delete:
      tags:
        - store
      summary: Stop your currently active subscription
      responses:
        '200':
          description: Succesfully removed your current subscription.
        '401':
          description: Authorization information is missing or invalid.
        '403':
            description: Forbidden!
        '500':
          description: Unexpected error.
      security:
        - Token: []
  /api/subscriptionInfo/{id}:
    description: collect statistics about your business
    get:
      summary: Collect statistics about your business.
      tags:
        - business
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: give the id of your business
      responses:
        '200':
          description: Succesfully collect all the data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  businessID:
                    type: integer
                  name:
                    type: string
                  subscription:
                    type: string
                  remainingSmallPods:
                    type: integer
                  remainingLargePods:
                    type: integer
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Unexpected error.
      security:
        - Token: [Business]

  /api/endpoints: #View all endpoints
    summary: get all endpoints
    description: Get all enpoints
    get:
      operationId: 'getEndpoints'
      tags:
        - Endpoint
      responses:
        '200':
          description: list of all endpoints
          content:
            text/json:
              schema:
                type: array
                items:
                  type: object
                example: [ {
                  id: '1',
                  name: 'Endpoint home',
                  available: true,
                  location: 'here',
                  privateEndpoint: true
                }]
        '500':
          description: Unexpected error.
  /api/endpoints/{id}: #view endpoint information
    summary: get endpoint information
    description: get endpoint information from ID
    get:
      tags:
        - endpoint
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: give the id of the endpoint
      responses:
        '200':
          description: list of an endpoint given their id
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  available:
                    type: boolean
                  location:
                    type: string
                  privateEndpoint:
                    type: boolean
        '500':
          description: Unexpected error.

  /api/delivery/{id}: #Get delivery information
    description: get delivery information
    get:
      summary: Get deliver information.
      tags:
        - delivery
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deliveryID:
                    type: integer
                  deliveryType:
                    type: string
                    enum: [ small, large ]
                  business:
                    type: boolean
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Unexpected error.
      security:
        - Token: []
  /api/sendPackage: #Add Delivery
    post:
      operationId: sendPackage
      summary: request and send a package pod
      tags:
        - delivery
      requestBody:
        description: provide correct information for a small or large package.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deliveryType:
                  type: string
                from:
                  type: integer
                destination:
                  type: integer
                date:
                  type: string
      responses:
        '200':
          description: package sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  deliveryID:
                    type: integer
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Unexpected error.
      security:
        - Token: []

  /api/routeInfo/{id}:
    description: Get route information.
    get:
      summary: Get your current route information.
      tags:
        - travel
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succesfully bought a ticket.
          content:
            application/json:
              schema:
                type: object
                properties:
                  routID:
                    type: integer
                  from:
                    type: string
                  destination:
                    type: string
                  estmTime:
                    type: integer
                  currentLocation:
                    type: string
        '401':
          description: Authorization information is missing or invalid.
        '403':
          description: Forbidden!
        '500':
          description: Unexpected error.
      security:
        - Token: []
  /api/travel:
    description: travel from one point to another.
    post:
      summary: Travel from one point to another.
      tags:
        - travel
      requestBody:
        description: provide required information in order to use this system.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: integer
                destination:
                  type: integer
                podType:
                  type: string
                  enum: [ standard, luxury ]
      responses:
        '200':
          description: Succesfuly requested a travel pod
          content:
            application/json:
              schema:
                type: object
                properties:
                  travelID:
                    type: integer
        '401':
          description: Authorization information is missing or invalid.
        '403':
            description: Forbidden!
        '500':
            description: Unexpected error.
      security:
        - Token: [User]

  /api/ping:
    get:
      tags:
        - server
      summary: Checks if the server is running
      responses:
        '200':
          description: Server is up and running
        default:
          description: Something is wrong