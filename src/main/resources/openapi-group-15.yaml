openapi: 3.0.0
info:
  title: 'Mars Concept Title'
  description: 'Please complete this spec as seen in the module Information Module'
  version: 0.0.1
servers:
  - url: http://localhost:8080/
    description: 'Local development implementation'
  - url: https://project-ii.ti.howest.be/mars-15
    description: 'Public web api'
paths:
  /api/message:
    get:
      description: Get a nice message
      operationId: getMessage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string

  /api/login: #login or logout
    summary: login/logout
    description: login/logout
    post:
      summary: login
      tags:
        - authentication
      requestBody:
        description: provide login information.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Succesfuly logged in.
          content:
            application/json:
              schema:
                type: object
                properties:
                  loginToken:
                    type: string
    delete:
      summary: logout
      tags:
        - authentication
      responses:
        '200':
          description: succesfully logged out of the system
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
      security:
        - bearerAuth: [ ]

  /api/createUser: #create account
    summary: create a user.
    description: creat a new user.
    post:
      summary: create a user.
      tags:
        - user
      requestBody:
        description: provide correct information to create a user.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                homeAdress:
                  type: string
                homeEndpointID:
                  type: integer
                businessAcount:
                  type: boolean
                password:
                  type: string
      responses:
        '200':
          description: user created
        '5XX':
          description: Unexpected error.
  /api/user/{id}: #get account information
    summary: get user information
    description: get user information
    get:
      summary: get user information.
      tags:
        - user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: give the id of the user
      responses:
        '200':
          description: list of an endpoint given their id
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: integer
                  name:
                    type: string
                  homeAdress:
                    type: string
                  homeEndpointID:
                    type: integer
                  password:
                    type: string
                  subscription:
                    type: string
                  subscriptionID:
                    type: integer
                example: {
                  userID: 1,
                  name: "Debby",
                  homeAdress: "Colony 1, residence 15",
                  homeEndpoint: 5,
                  password: "DFdes6'(Dfeiqdsfv64501d*",
                  subscription: "Unlimited",
                  subscriptionID: "5"
                }
      security:
        - bearerAuth: [ ]


  /api/endpoints: #View all endpoints
    summary: get all endpoints
    description: Get all enpoints
    get:
      operationId: 'getEndpoints'
      tags:
        - Endpoint
      responses:
        '200':
          description: list of all endpoints
          content:
            text/json:
              schema:
                type: array
                items:
                  type: object
                example: [ {
                  id: '1',
                  name: 'Endpoint home',
                  available: true,
                  location: 'here',
                  privateEndpoint: true
                }]
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.
  /api/endpoints/{id}: #view endpoint information
    summary: get endpoint information
    description: get endpoint information from ID
    get:
      tags:
        - endpoint
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: give the id of the endpoint
      responses:
        '200':
          description: list of an endpoint given their id
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  available:
                    type: boolean
                  location:
                    type: string
                  privateEndpoint:
                    type: boolean
        '401':
          description: Authorization information is missing or invalid.
        '5XX':
          description: Unexpected error.